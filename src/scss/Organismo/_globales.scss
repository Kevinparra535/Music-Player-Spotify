@import "../Tokens/colors";
@import "../Tokens/spacings";
@import "../Tokens/typos";

// Otorga mayuscula automatica al tipo de fuente 2
@mixin titulos($fuente) {
	@if $fuente==$Fuente1 {
		font-family: $Fuente1;
	} @else {
		font-family: $Fuente2;
		text-transform: uppercase;
		font-weight: $medium;
	}
}

//Funcion para el texto responsivo
@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

// @each $header, $size in (h1: 30px, h2: 25px, h3: 20px) {
//     #{$header} {
//         font-size: $size;
//         @include titulos($Fuente2);
//         margin: 0;
//     }
// }

// Estilo de los botones
@mixin botones {
	padding: $space $space_x2;
	font-weight: 600;
	text-align: center;
	border: none;
	outline: none;
	border-radius: $space_half;
	cursor: pointer;
	@include sombras;
	&:hover {
		opacity: 0.9;
	}
	@include media(desktop-s) {
		padding: $space $space_x2;
		font-weight: 600;
		text-align: center;
		border: none;
		outline: none;
		border-radius: $space_half;
	}
}

@mixin sombras {
	box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
}

// Estilo de los inputs
@mixin inputs {
	padding: $space;
	width: 100%;
	font-size: $p;
	border: none;
	border-bottom: 1px solid get-opacity($color-primario, 0.5);
	background-color: $color-bg-claro;
	outline: none;
	&:placeholder {
		color: $color-oscuro;
	}
}

// Estilo de los selects
@mixin selects {
	border-radius: $space;
	padding: $space;
	width: 100%;
	font-size: $p;
	border: none;
	border: 1px solid $color-primario;
	outline: none;
	background-color: $color-bg-claro;
	&:placeholder {
		color: $color-oscuro;
	}
}
@mixin textareas {
	border-radius: $space;
	padding: $space;
	width: 100%;
	font-size: $p;
	border: none;
	border: 1px solid $color-primario;
	outline: none;
	background-color: $color-bg-claro;
	&:placeholder {
		color: $color-oscuro;
	}
}

@mixin cards {
	width: 100%;
	height: auto;
	border-radius: $space;
	object-fit: cover;
}

//Funcion para el texto responsivo
@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

// Dependiendo del tama√±o del texto se selecciona un alto de linea automatica
@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
	line-height: calculateRem($size) * 1.5;
}

// Opacidad
@function get-opacity($color, $amount) {
	@return rgba($color, $amount);
}

@each $header, $size in (h1: 30px, h2: 25px, h3: $space_x2) {
	#{$header} {
		//Se declara el elemento
		font-size: $size; //Le decimos que por cada etiqueta h imprimimos los valores
		margin: 0;
	}
}
